diff --git a/core/Main.C b/core/Main.C
index acef32c..b7f7c39 100644
--- a/core/Main.C
+++ b/core/Main.C
@@ -74,9 +74,7 @@ static inline uint64_t memUsed(void) {
 static inline uint64_t memUsed() { return 0; }
 #endif
 
-#if defined(__linux__)
-#include <fpu_control.h>
-#endif
+#include <fenv.h>
 
 //=================================================================================================
 // DIMACS Parser:
@@ -287,9 +285,13 @@ int main(int argc, char** argv)
 
 
     reportf("This is MiniSat 2.0 beta\n");
-#if defined(__linux__)
-    fpu_control_t oldcw, newcw;
-    _FPU_GETCW(oldcw); newcw = (oldcw & ~_FPU_EXTENDED) | _FPU_DOUBLE; _FPU_SETCW(newcw);
+#if defined(__x86_64) || defined(__i386) || defined(_M_IX86) || defined(_X86_) || defined(__X86__)
+    // Only correct FPU precision on architectures that need and support it:
+    fenv_t fenv;
+    fegetenv(&fenv);
+    fenv.__control_word &= ~0x300; // _FPU_EXTENDED
+    fenv.__control_word |= 0x200; // _FPU_DOUBLE
+    fesetenv(&fenv);
     reportf("WARNING: for repeatability, setting FPU to use double precision\n");
 #endif
     double cpu_time = cpuTime();
diff --git a/simp/Main.C b/simp/Main.C
index b6d1946..3e16e9c 100644
--- a/simp/Main.C
+++ b/simp/Main.C
@@ -74,9 +74,7 @@ static inline uint64_t memUsed(void) {
 static inline uint64_t memUsed() { return 0; }
 #endif
 
-#if defined(__linux__)
-#include <fpu_control.h>
-#endif
+#include <fenv.h>
 
 
 //=================================================================================================
@@ -244,9 +242,13 @@ const char* hasPrefix(const char* str, const char* prefix)
 int main(int argc, char** argv)
 {
     reportf("This is MiniSat 2.0 beta\n");
-#if defined(__linux__)
-    fpu_control_t oldcw, newcw;
-    _FPU_GETCW(oldcw); newcw = (oldcw & ~_FPU_EXTENDED) | _FPU_DOUBLE; _FPU_SETCW(newcw);
+#if defined(__x86_64) || defined(__i386) || defined(_M_IX86) || defined(_X86_) || defined(__X86__)
+    // Only correct FPU precision on architectures that need and support it:
+    fenv_t fenv;
+    fegetenv(&fenv);
+    fenv.__control_word &= ~0x300; // _FPU_EXTENDED
+    fenv.__control_word |= 0x200; // _FPU_DOUBLE
+    fesetenv(&fenv);
     reportf("WARNING: for repeatability, setting FPU to use double precision\n");
 #endif
     preprocessMode pre    = pre_once;
